# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-17 21:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('asset_id', models.CharField(default=uuid.uuid4, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('asset_tag', models.CharField(default=uuid.uuid4, max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Asset_Custom_Field_Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Asset')),
            ],
        ),
        migrations.CreateModel(
            name='Custom_Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=400)),
                ('is_private', models.BooleanField(default=False)),
                ('field_type', models.CharField(choices=[('Short', 'Short-Form Text'), ('Long', 'Long-Form Text'), ('Int', 'Integer'), ('Float', 'Floating-Point Number')], default='Short', max_length=200)),
                ('field_kind', models.CharField(choices=[('Item', 'Item'), ('Asset', 'Asset')], default='Item', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Custom_Field_Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Custom_Field')),
            ],
        ),
        migrations.CreateModel(
            name='Disbursement',
            fields=[
                ('disburse_id', models.CharField(default=uuid.uuid4, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('admin_name', models.CharField(max_length=200)),
                ('user_name', models.CharField(max_length=200)),
                ('total_quantity', models.IntegerField()),
                ('comment', models.CharField(max_length=200)),
                ('time_disbursed', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='EmailPrependValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prepend_text', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.CharField(default=uuid.uuid4, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('item_name', models.CharField(max_length=200, unique=True)),
                ('quantity', models.IntegerField()),
                ('model_number', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=1000, null=True)),
                ('threshold_quantity', models.IntegerField(default=0, null=True)),
                ('threshold_enabled', models.BooleanField(default=False)),
                ('is_asset', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Item_Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_change_status', models.CharField(max_length=400, null=True)),
                ('item_amount', models.SmallIntegerField()),
                ('item_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Item')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('loan_id', models.CharField(default=uuid.uuid4, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('admin_name', models.CharField(max_length=200)),
                ('user_name', models.CharField(max_length=200)),
                ('total_quantity', models.IntegerField()),
                ('comment', models.CharField(max_length=200)),
                ('time_loaned', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('Checked Out', 'Checked Out'), ('Checked In', 'Checked In'), ('Backfilled', 'Backfilled')], default='Checked Out', max_length=200)),
                ('backfill_pdf', models.FileField(null=True, upload_to='documents/%Y/%m/%d/')),
                ('backfill_status', models.CharField(choices=[('None', 'None'), ('Requested', 'Requested'), ('Denied', 'Denied'), ('In Transit', 'In Transit'), ('Completed', 'Completed')], default='None', max_length=200)),
                ('backfill_quantity', models.IntegerField(null=True)),
                ('backfill_notes', models.TextField(null=True)),
                ('backfill_time_requested', models.DateTimeField(null=True)),
                ('item_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Item')),
            ],
        ),
        migrations.CreateModel(
            name='LoanReminderEmailBody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LoanSendDates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(default=None, max_length=200, null=True)),
                ('item_id', models.CharField(default=None, max_length=200, null=True)),
                ('item_name', models.CharField(max_length=200, null=True)),
                ('initiating_user', models.CharField(max_length=200)),
                ('nature_of_event', models.CharField(choices=[('Create', 'Create'), ('Delete', 'Delete'), ('Request', 'Request'), ('Disburse', 'Disburse'), ('Approve', 'Approve'), ('Deny', 'Deny'), ('Edit', 'Edit'), ('Override', 'Override'), ('Acquire', 'Acquire'), ('Lost', 'Lost'), ('Broken', 'Broken'), ('Loan', 'Loan'), ('Check In', 'Check In'), ('Backfilled', 'Backfilled')], max_length=200)),
                ('time_occurred', models.DateTimeField(default=django.utils.timezone.now)),
                ('affected_user', models.CharField(default='', max_length=200, null=True)),
                ('change_occurred', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.CharField(default=uuid.uuid4, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('user_id', models.CharField(max_length=200)),
                ('request_quantity', models.IntegerField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied')], default='Pending', max_length=200)),
                ('comment', models.CharField(default='', max_length=200, null=True)),
                ('reason', models.CharField(max_length=200)),
                ('time_requested', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(choices=[('Dispersal', 'Dispersal'), ('Loan', 'Loan')], default='Dispersal', max_length=200)),
                ('item_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='inventory.Item')),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCartInstance',
            fields=[
                ('cart_id', models.CharField(default=uuid.uuid4, max_length=200, primary_key=True, serialize=False, unique=True)),
                ('user_id', models.CharField(max_length=200)),
                ('quantity', models.SmallIntegerField()),
                ('type', models.CharField(choices=[('Dispersal', 'Dispersal'), ('Loan', 'Loan')], max_length=200)),
                ('reason', models.CharField(default='', max_length=200)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Item')),
            ],
        ),
        migrations.CreateModel(
            name='SubscribedUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='loan',
            name='orig_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Request'),
        ),
        migrations.AddField(
            model_name='item',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='items', to='inventory.Tag'),
        ),
        migrations.AddField(
            model_name='disbursement',
            name='item_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Item'),
        ),
        migrations.AddField(
            model_name='disbursement',
            name='orig_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Request'),
        ),
        migrations.AddField(
            model_name='custom_field_value',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Item'),
        ),
        migrations.AlterUniqueTogether(
            name='custom_field',
            unique_together=set([('field_name', 'field_kind')]),
        ),
        migrations.AddField(
            model_name='asset_custom_field_value',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Custom_Field'),
        ),
        migrations.AddField(
            model_name='asset',
            name='disbursement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Disbursement'),
        ),
        migrations.AddField(
            model_name='asset',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Item'),
        ),
        migrations.AddField(
            model_name='asset',
            name='loan',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Loan'),
        ),
        migrations.AlterUniqueTogether(
            name='custom_field_value',
            unique_together=set([('item', 'field')]),
        ),
        migrations.AlterUniqueTogether(
            name='asset_custom_field_value',
            unique_together=set([('asset', 'field')]),
        ),
    ]
